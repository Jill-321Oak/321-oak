<style>
  .ck-banner{position:fixed;inset:auto 0 0 0;display:flex;gap:.75rem;align-items:center;justify-content:space-between;padding:.9rem 1rem;background:#111;color:#fff;font:14px/1.4 system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;z-index:9999}
  /* Make the [hidden] attribute actually hide the banner */
  .ck-banner[hidden]{display:none !important;}
  .ck-banner p{margin:0;max-width:70ch}
  .ck-btns{display:flex;gap:.5rem}
  .ck-btn{border:0;padding:.5rem .8rem;cursor:pointer;border-radius:.375rem}
  .ck-accept{background:#006611 !important;color:#fff}
  .ck-decline{background:#006611 !important;color:#fff}
  .ck-link{color:#9ecbff;text-decoration:underline}
  @media (max-width:640px){.ck-banner{flex-direction:column;align-items:stretch}.ck-btns{justify-content:flex-end}}
</style>

<div id="ck-banner" class="ck-banner" hidden>
  <p>We use cookies for analytics. <a class="ck-link" href="/privacy/" rel="nofollow">Learn more</a>.</p>
  <div class="ck-btns">
    <button class="ck-btn ck-decline" id="ck-decline">Decline</button>
    <button class="ck-btn ck-accept" id="ck-accept">Accept</button>
  </div>
</div>

<script>
(function(){
  const KEY = 'ck-consent-v1';

  // --- domain helpers ---
  function baseDomain(host){
    const parts = host.split('.');
    if (parts.length >= 2) return parts.slice(-2).join('.'); // good for .com/.net/etc.
    return host; // localhost or similar
  }
  const host = location.hostname;
  const root = baseDomain(host);

  // --- cookie helpers (robust) ---
  function getCookie(name){
    const pairs = document.cookie ? document.cookie.split('; ') : [];
    for (const p of pairs) {
      const eq = p.indexOf('=');
      const k = eq > -1 ? p.slice(0, eq) : p;
      if (k === name) return decodeURIComponent(eq > -1 ? p.slice(eq + 1) : '');
    }
    return null;
  }
  function setCookieAll(name, value, days){
    const maxAge = (days ?? 365) * 24 * 60 * 60; // 12 months
    const commonAttrs = '; Max-Age=' + maxAge + '; Path=/' + (location.protocol === 'https:' ? '; Secure' : '') + '; SameSite=Lax';
    // 1) exact host
    document.cookie = name + '=' + encodeURIComponent(value) + commonAttrs;
    // 2) base domain (covers www <-> apex)
    if (root && root !== host && host.indexOf('.') !== -1){
      document.cookie = name + '=' + encodeURIComponent(value) + commonAttrs + '; Domain=.' + root;
    }
  }

  function getStoredConsent(){
    return getCookie(KEY) || localStorage.getItem(KEY);
  }
  function storeConsent(val){
    try { localStorage.setItem(KEY, val); } catch(e) {}
    setCookieAll(KEY, val, 365); // re-ask after 12 months
  }

  const banner = document.getElementById('ck-banner');
  const saved = getStoredConsent();

  // Safe gtag wrapper (in case GA isn't loaded yet)
  function safeGtag(){
    if (typeof gtag === 'function') return gtag;
    return function(){ /* no-op until GA loads */ };
  }
  const g = safeGtag();

  function updateConsent(granted){
    g('consent','update',{
      ad_storage: granted ? 'granted' : 'denied',
      analytics_storage: granted ? 'granted' : 'denied',
      ad_user_data: granted ? 'granted' : 'denied',
      ad_personalization_storage: granted ? 'granted' : 'denied'
    });
    storeConsent(granted ? 'granted' : 'denied');
  }

  if (!saved){
    // No stored choice: show banner
    banner.hidden = false;
  } else {
    // Apply existing choice silently
    updateConsent(saved === 'granted');
  }

  document.getElementById('ck-accept')?.addEventListener('click', function(){
    updateConsent(true);
    banner.remove();
  });
  document.getElementById('ck-decline')?.addEventListener('click', function(){
    updateConsent(false);
    banner.remove();
  });
})();
</script>


